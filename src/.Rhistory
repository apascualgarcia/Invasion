library(gplots)
library(MASS)
require(lavaan)
library(rstudioapi)
models=c("CompProdInvasion_Independent.lav","CompProdInvasion_NoMediation.lav",
"CompProdInvasion_PartialMediation.lav","CompProdInvasion_CompleteMediation.lav")
raw=1 # = 1 if process the data from scracth, 0 read a pre-processed RDS file
fileFun="20151016_Functions_remainder.csv"
fileInv="invasiondata_albertomatched_050617.csv"
fileFunGroup="SamplePropsOFtaxaClus_Time0_NL_Average_StopStep-90_ZscoreMean.dat"
fileAll="semdf.RDS"
model.fit.list=list()
k=0
for(selectModel in models){
k=k+1
cat("** Running model ",selectModel,"\n")
if(k == 1){
this.dir=strsplit(rstudioapi::getActiveDocumentContext()$path, "/src/")[[1]][1]
pathCode=paste(this.dir,"/src",sep="") # this the path where the code is
setwd(pathCode)
source("SEM_Lavaan_process_input.R")
}
source("SEM_Lavaan_NetGroups_2pub.R")
model.fit.list[[k]]=model.fit
}
getwd()
model.fit.list=list()
k=0
for(selectModel in models){
k=k+1
cat("** Running model ",selectModel,"\n")
if(k == 1){
this.dir=strsplit(rstudioapi::getActiveDocumentContext()$path, "/src/")[[1]][1]
pathCode=paste(this.dir,"/src",sep="") # this the path where the code is
setwd(pathCode)
source("SEM_Lavaan_process_input.R")
setwd(pathCode)
}
source("SEM_Lavaan_NetGroups_2pub.R")
model.fit.list[[k]]=model.fit
}
model.fit.list=list()
k=0
for(selectModel in models){
k=k+1
cat("** Running model ",selectModel,"\n")
if(k == 1){
this.dir=strsplit(rstudioapi::getActiveDocumentContext()$path, "/src/")[[1]][1]
pathCode=paste(this.dir,"/src",sep="") # this the path where the code is
setwd(pathCode)
source("SEM_Lavaan_process_input.R")
setwd(pathCode)
}
source("SEM_Lavaan_NetGroups_2pub.R")
model.fit.list[[k]]=mod.fit
}
anova(mod.fit.list[[1]],mod.fit.list[[2]],mod.fit.list[[3]],mod.fit.list[[4]]) # then the variables can be compared
anova.test=anova(model.fit.list[[1]],model.fit.list[[2]],
model.fit.list[[3]],model.fit.list[[4]]) # then the variables can be compared
anova.test=lavaan::anova(model.fit.list[[1]],model.fit.list[[2]],
model.fit.list[[3]],model.fit.list[[4]]) # then the variables can be compared
anova.test=lavTestLRT(model.fit.list[[1]],model.fit.list[[2]],
model.fit.list[[3]],model.fit.list[[4]]) # then the variables can be compared
class(model.fit.list[[1]])
library(AICcmodavg)
aictab(model.fit.list,
modnames=c("Independent","NoMediation","Partial","Complete"))
HS.model <- '
visual  =~ x1 + b1*x2 + x3
textual =~ x4 + b2*x5 + x6
speed   =~ x7 + b3*x8 + x9
'
fit1 <- cfa(HS.model, data = HolzingerSwineford1939)
fit0 <- cfa(HS.model, data = HolzingerSwineford1939,
orthogonal = TRUE)
class(fit1)
list.tmp=list()
list.tmp[[1]]=fit1
class(list.tmp[[1]])
model.fit.list=list()
k=0
for(selectModel in models){
k=k+1
cat("** Running model ",selectModel,"\n")
if(k == 1){
this.dir=strsplit(rstudioapi::getActiveDocumentContext()$path, "/src/")[[1]][1]
pathCode=paste(this.dir,"/src",sep="") # this the path where the code is
setwd(pathCode)
source("SEM_Lavaan_process_input.R")
setwd(pathCode)
}
source("SEM_Lavaan_NetGroups_2pub.R")
model.fit.list[[k]]=fit
}
anova.test=lavTestLRT(model.fit.list[[1]],model.fit.list[[2]],
model.fit.list[[3]],model.fit.list[[4]]) # then the variables can be compared
View(anova.test)
summary(anova.test)
library(AICcmodavg)
aictab(model.fit.list,
modnames=c("Independent","NoMediation","Partial","Complete"))
model.fit.list=list()
k=0
for(selectModel in models){
k=k+1
cat("** Running model ",selectModel,"\n")
if(k == 1){
this.dir=strsplit(rstudioapi::getActiveDocumentContext()$path, "/src/")[[1]][1]
pathCode=paste(this.dir,"/src",sep="") # this the path where the code is
setwd(pathCode)
source("SEM_Lavaan_process_input.R")
setwd(pathCode)
}
source("SEM_Lavaan_NetGroups_2pub.R")
model.fit.list[[k]]=fit
}
anova.test213=lavTestLRT(model.fit.list[[2]],model.fit.list[[1]],model.fit.list[[3]]) # Independent in the middle
model.fit.list=list()
k=0
for(selectModel in models){
k=k+1
cat("** Running model ",selectModel,"\n")
if(k == 1){
this.dir=strsplit(rstudioapi::getActiveDocumentContext()$path, "/src/")[[1]][1]
pathCode=paste(this.dir,"/src",sep="") # this the path where the code is
setwd(pathCode)
source("SEM_Lavaan_process_input.R")
setwd(pathCode)
}
source("SEM_Lavaan_NetGroups_2pub.R")
model.fit.list[[k]]=fit
}
aictab(model.fit.list,
modnames=c("Independent","NoMediation","Partial","Complete"))
source('~/Nextcloud/Research/Projects/FunctionalGroups/Repositories/Invasion/src/launch_SEM_multiple.R')
source('~/Nextcloud/Research/Projects/FunctionalGroups/Repositories/Invasion/src/launch_SEM_multiple.R')
setwd(pathOut)
sink("MultipleTests_results.txt")
cat("******** \n")
cat("Anova tests \n")
cat("1=Independent,2=NoMediation,3=Partial,4=Complete \n")
print(anova.test)
cat(" \n")
cat("******** \n")
cat("Rank by parsimony (AIC), we expect a deltaAIC > 2 per degree of freedom lost \n")
print(aic.rank)
sink()
anova.test=lavTestLRT(model.fit.list[[3]],model.fit.list[[4]]) # Partial and complete
setwd(pathOut)
sink("MultipleTests_results.txt")
cat("******** \n")
cat("Anova tests \n")
cat("1=Independent,2=NoMediation,3=Partial,4=Complete \n")
print(anova.test)
cat(" \n")
cat("******** \n")
cat("Rank by parsimony (AIC), we expect a deltaAIC > 2 per degree of freedom lost \n")
print(aic.rank)
sink()
source('~/Nextcloud/Research/Projects/FunctionalGroups/Repositories/Invasion/src/launch_SEM_multiple.R')
source('~/Nextcloud/Research/Projects/FunctionalGroups/Repositories/Invasion/src/launch_SEM_multiple.R')
source('~/Nextcloud/Research/Projects/FunctionalGroups/Repositories/Invasion/src/launch_SEM_multiple.R')
